AMI Overview
* AMI = Amazon Machine Image
* AMI are a customization of an EC instance
  * You add your own software, configuration, operation system, monitoring, ...
  * Faster boot/ configuration time because all your software is pre-packaged
* AMI are built for a specific region (and can be copied across regions)
* You can launch EC2 instances from:
  * A Public AMI: AWS provided
  * Your own AMI: you make and maintain them yourself
  * An AWS Marketplace AMI: an AMI someone else made (and potentially sells)

AMI Process (from an EC2 instance)
* Start an EC2 instance and customize it 
* Stop the instance (for data integrity)
* Build an AMI - this will also create EBS snapshots
* Launch instances from other AMIs

EC2 Instance Store
* EBS volumes are network drives with good but "limited" performance
* If you need a high-performance hardware disk, use EC2 instance store.
* Better I/O performance
* EC2 Instance Store lose their storage if they're stopped (ephemeral)
* Good for buffer / cache / scratch data / temporary content
* Risk of data if hardware fails
* Backups and Replication are your responsibility

EBS Volume Types
* EBS Volumes come in 6 types:
  * gp2 / gp3 (SSD) : General purpose SSD volume that balances price and performance for a wide variety of workloads
  * io1 / io2 (SSD): Highest-performance SSD volume for mission-critical low-latency or high-throughput workloads
  * st1 (HDD): Low cost HDD volume designed for frequently accessed, throughput-intensive workloads
  * sc1 (HDD): Lowest cost HDD volume designed for less frequently accessed workloads
* EBS Volumes are characterized in Size | Throughput | IOPS (I/O Ops Per Sec)
* Only gp2/gp3 and io1/io2 can be used as boot volumes

EBS Volume Types Use cases

General Purpose SSD
* Cost effective storage, low-latency
* System boot volumes, Virtual desktops, Development and test environments
* 1 GiB - 16TiB
* gp3:
  * Baseline of 3000 IOPS and throughput of 125 MiB/s
  * Can increase IOPS up to 16000 and throughput up to 1000 MiB/s independently
* gp2:
  * Small gp2 volumes can burst IOPS to 3000
  * Size of the volume and IOPS are linked, max IOS is 16000
  * 3 IOPS per GB, means at 5334 GB we are at the max IOPS

Provisioned IOPS (PIOPS) SSD
* Critical business applications with sustained IOPS performance
* Or applications that need more than 16000 IOPS
* Great for database workloads (sensitive to storage performance and consistency)
* io1/io2 (4GiB - 16TiB):
  * Max PIOPS: 64000 for Nitro EC2 instances & 32000 for others
  * Can increase PIOPS independently from storage size 
  * io2 have more durability and more IOPS per GiB (at the same price as io1)
* io2 Block Express (4 GiB - 64TiB):
  * Sub-milisecond latency
  * Max PIOPS: 256000 with an IOPS:GiB ratio of 1000:1
* Supports EBS Multi-attach

Hard Disk Drives (HDD)
* Cannot be a boot volume
* 125 GiB to 16TiB
* Throughput Optimized HDD (st1)
  * Big Data, Data warehouses, Log processing
  * Max throughput 500 MiB/s - max IOPS 500
* Cold HDD (sc1)
  * For data that is infrequently accessed
  * Scenarios where lowest cost is important
  * Max throughput 250 MiB/s - max IOPS 250

EBS Multi-Attach - io1/io2 family
* Attach the same EBS volume to multiple EC2 instances in the same AZ
* Each instance has full read & write permissions to the high-performance volume
* Use case:
  * Archive higher application availability in clustered Linux applications (ex: Teradata)
  * Applications must manage concurrent write operations
* Up to 16 EC2 Instances at a time
* Must use a file system that's cluster-aware (not XFS, EXT4, etc...)

EBS Encryption
* When you create an encrypted EBS volume, you get the following:
  * Data at rest is encrypted inside the volume
  * All the data in flight moving between the instance and the volume is encrypted
  * All snapshots are encrypted
  * All volumes created from the snapshot
* Encryption and decryption are handled transparently (you have nothing to do)
* Encryption has a minimal impact on latency
* EBS Encryption leverages keys from KMS (AES-256)
* Copying an unencrypted snapshot allows encryption
* Snapshots of encrypted volumes are encrypted

Encryption: encrypt an unencrypted EBS volume
* Create an EBS snapshot of the volume
* Encrypt the EBS snapshot
* Create new ebs volume from the snapshot (the volume will also be encrypted)
* Now you can attach the encrypted volume to the original instance

Amazon EFS - Elastic File System
* Managed EFS (network file system) that can be mounted on many EC2
* EFS works with EC2 instances in multi-AZ
* Highly available, scalable, expensive (3 x gp2), pay per use 
* Use cases: content management, web serving, data sharing, Wordpress
* Uses NFSv4.1 protocol
* Uses security group to control access to EFS
* Compatible with Linux based AMI (not Windows)
* Encryption at rest using KMS
* POSIX file system (~Linux) that has a standard file API
* File system scales automatically, pay-per-use, no capacity planning

EFS - Performance & Storage classes
* EFS scale
  * 1000s of concurrent NFS clients, 10 GB+/s throughput
  * Grow to Petabyte-scale network file system, automatically
* Performance Mode (set at EFS creation time)
  * General Purpose (default) - latency-sensitive use cases (web server, CMS, etc...)
  * Max I/O - higher latency, throughput, highly parallel (big data, media processing)
* Throughput Mode
  * Bursting - 1TB = 50MiB/s + burst of up to 100 MiB/s
  * Provisioned - set your throughput regardless of storage size, ex: 1 GiB/s for 1 TB storage
  * Elastic - automatically scales throughput up or down based on your workloads
    * Up to 3 GiB/s for reads and 1 GiB/s for writes
    * Used for unpredictable workloads

EFS - Storage classes
* Storage Tiers (lifecycle management feature - move file after N days)
  * Standard: for frequently accessed files
  * Infrequent access (EFS-IA): cost to retrive files, lower price to store. Enable EFS-IA with a lifecycle policy
* Avaliability and durability
  * Standard: Multi-AZ, great for production
  * One Zone: One AZ, greate for dev, backup enabled by default, compatible with IA (EFS One Zone-IA)
* Over 90% in cost savings

EBS - EFS: Elastic Block Storage
* EBS volumes...
  * one instance (except multi-attach io1/io2)
  * are locked at the Availability Zone (AZ) level
  * gp2: IO increases if the disk size increases
  * io1: can increase IO independently
* To migrate an EBS volume across AZ
  * Take a snapshot 
  * Restore the snapshot to another AZ
  * EBS backups use IO and you shouldn't run them while your application is handling a lot of traffic
* Root EBS volumes of instances get terminated by default if the EC2 instance gets terminated (you can disable that)

EBA - EFS: Elastic File System
* Mounting 100s of instance across AZ 
* EFS share website files (WordPress)
* Only for linux Instances (POSIX)
* EFS has a higher price point than EBS
* Can leverage EFS-IA for cost savings
* Remember: EFS vs EBS vs Instance store